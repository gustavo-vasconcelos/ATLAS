---
openapi: 2.0
info:
  title: user-management-microservice
  version: '1'
servers:
- url: http://localhost:8081
  description: Generated  server url
paths:
  "/users":
    post:
      tags:
      - user-management
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateUserRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserDto"
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ErrorTemplate"
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ErrorTemplate"
        '409':
          description: Conflict
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ErrorTemplate"
        '500':
          description: Internal Server Error
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ErrorTemplate"
        '502':
          description: Bad Gateway
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ErrorTemplate"
        default:
          description: default response
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ErrorTemplate"
components:
  schemas:
    ErrorTemplate:
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
          example: CCC-E001
        errorMessage:
          type: string
          example: Parameter validation failure
        errorDescription:
          type: string
          example: Parameter is not valid
    CharacteristicsDto:
      type: object
      properties:
        country:
          type: string
        emailAddress:
          type: string
        phoneNumber:
          type: string
    ContactMediumDto:
      type: object
      properties:
        preferred:
          type: boolean
        characteristics:
          "$ref": "#/components/schemas/CharacteristicsDto"
    CreateUserRequestDto:
      required:
      - groups
      - userName
      - userType
      type: object
      properties:
        contactMedium:
          type: array
          items:
            "$ref": "#/components/schemas/ContactMediumDto"
        userName:
          type: string
        userType:
          type: string
          enum:
          - customer
          - agent
        groups:
          type: array
          items:
            type: string
        givenName:
          type: string
        familyName:
          type: string
        href:
          type: string
        productInventory:
          "$ref": "#/components/schemas/ProductInventoryDto"
        customerId:
          type: string
        contactId:
          type: string
        roles:
          type: array
          items:
            type: string
    ProductInventoryDto:
      type: object
      properties:
        accountId:
          type: string
        subscriptionId:
          type: string
        deviceId:
          type: string
    UserDto:
      type: object
      properties:
        id:
          type: string
        identityId:
          type: string